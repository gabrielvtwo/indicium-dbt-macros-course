
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'macros_training'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'macros_training'

vars:
  payload_bucket: v2_training_example

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.
models:
  macros_training:
    # Config indicated by + and applies to all files under models/example/
    # +post-hook: "{{ payload_publisher() }}"
    +post-hook: "{{ post_hook_example() }}"
    crm:
      +group: crm
      marts:
        +materialized: table
        +tags:
          - marts
        +access: public
      staging:
        +materialized: view
        +tags:
          - stg
        +access: private

    sales:
      +group: sales
      marts:
        +materialized: table
        +tags:
          - marts
        +access: public
      staging:
        +materialized: view
        +tags:
          - stg
        +access: private

seeds:
  macros_training:
    +enabled: true
    contracts:
      +column_types:
        id: string
        nucontrato: string
        name: string
        insert_date: timestamp
    transactions:
      +column_types:
        transactionid: string
        value: float
        user: string
        var001: float
        var002: float
        var003: float
        var004: float
        var005: float
        var006: float
        var007: float
        transdate: datetime

on-run-end:
  - "{{ log_results(results) }}"
